generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Member {
  id             BigInt           @id @default(autoincrement())
  name           String?          @db.VarChar(20)
  gender         String?          @db.VarChar(10)
  age            BigInt?
  address        String?          @db.VarChar(40)
  spec_address    String?          @map("spec_address") @db.VarChar(50)
  status         String?          @db.VarChar(15)
  inactive_date   DateTime?        @map("inactive_date") @db.DateTime(0)
  social_type    String?          @map("social_type") @db.VarChar(10)
  created_at      DateTime?        @map("created_at") @db.DateTime(6)
  updated_at      DateTime?        @updatedAt @map("updated_at") @db.DateTime(6)
  email          String?          @db.VarChar(50)
  point          BigInt?
  member_agree   member_agree[]
  member_mission member_mission[]
  member_prefer  member_prefer[]
  review         review[]

  @@map("member")
}

model food_category {
  id            BigInt          @id @default(autoincrement())
  name          String?         @db.VarChar(15)
  created_at    DateTime?       @db.DateTime(6)
  updated_at    DateTime?       @db.DateTime(6)
  member_prefer member_prefer[]

  @@map("food_category")
}

model member_agree {
  id         BigInt    @id @default(autoincrement())
  member_id  BigInt?
  terms_id   BigInt?
  created_at DateTime? @db.DateTime(6)
  updated_at DateTime? @db.DateTime(6)
  member     Member?   @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_agree_ibfk_1")
  terms      terms?    @relation(fields: [terms_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_agree_ibfk_2")

  @@index([member_id], map: "member_agree_ibfk_1")
  @@index([terms_id], map: "member_agree_ibfk_2")
  @@map("member_agree")
}

model member_mission {
  id         BigInt    @id @default(autoincrement())
  member_id  BigInt?
  mission_id BigInt?
  status     String?   @db.VarChar(15)
  created_at DateTime? @db.DateTime(6)
  updated_at DateTime? @db.DateTime(6)
  member     Member?   @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_mission_ibfk_1")
  mission    mission?  @relation(fields: [mission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_mission_ibfk_2")

  @@index([member_id], map: "member_mission_ibfk_1")
  @@index([mission_id], map: "member_mission_ibfk_2")
  @@map("member_mission")
}

model member_prefer {
  id            BigInt         @id @default(autoincrement())
  member_id     BigInt?
  category_id   BigInt?
  created_at    DateTime?      @db.DateTime(6)
  updated_at    DateTime?      @db.DateTime(6)
  member        Member?        @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_prefer_ibfk_1")
  food_category food_category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_prefer_ibfk_2")

  @@index([member_id], map: "member_prefer_ibfk_1")
  @@index([category_id], map: "member_prefer_ibfk_2")
  @@map("member_prefer")
}

model mission {
  id             BigInt           @id @default(autoincrement())
  store_id       BigInt?
  reward         Int?
  deadline       DateTime?        @db.DateTime(0)
  mission_spec   String?          @db.Text
  created_at     DateTime?        @db.DateTime(6)
  updated_at     DateTime?        @db.DateTime(6)
  member_mission member_mission[]
  store          store?           @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mission_ibfk_1")

  @@index([store_id], map: "store_id")
   @@map("mission")
}

model region {
  id         BigInt    @id @default(autoincrement())
  name       String?   @db.VarChar(20)
  created_at DateTime? @db.DateTime(6)
  updated_at DateTime? @db.DateTime(6)
  store      store[]

   @@map("region")
}

model review {
  id           BigInt         @id @default(autoincrement())
  member_id    BigInt?
  store_id     BigInt?
  body         String?        @db.Text
  score        Float?         @db.Float
  member       Member?        @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "review_ibfk_1")
  store        store?         @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "review_ibfk_2")
  review_image review_image[]

  @@index([member_id], map: "review_ibfk_1")
  @@index([store_id], map: "review_ibfk_2")
  @@map("review")
}

model review_image {
  id         BigInt    @id @default(autoincrement())
  review_id  BigInt?
  image_url  String?   @db.Text
  created_at DateTime? @db.DateTime(6)
  updated_at DateTime? @db.DateTime(6)
  review     review?   @relation(fields: [review_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "review_image_ibfk_1")

  @@index([review_id], map: "review_image_ibfk_1")
  @@map("review_image")
}

model store {
  id         BigInt    @id @default(autoincrement())
  region_id  BigInt?
  name       String?   @db.VarChar(50)
  address    String?   @db.VarChar(50)
  score      Float?    @db.Float
  created_at DateTime? @db.DateTime(6)
  updated_at DateTime? @db.DateTime(6)
  mission    mission[]
  review     review[]
  region     region?   @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_ibfk_1")

  @@index([region_id], map: "region_id")
  @@map("store")
}

model terms {
  id           BigInt         @id @default(autoincrement())
  title        String?        @db.VarChar(20)
  body         String?        @db.Text
  optional     Boolean?
  created_at   DateTime?      @db.DateTime(6)
  updated_at   DateTime?      @db.DateTime(6)
  member_agree member_agree[]
  @@map("terms")
}
